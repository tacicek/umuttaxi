---
export interface Props {
  title: string;
  description: string;
  image?: string;
  type?: "website" | "article" | "service";
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  section?: string;
  tags?: string[];
  structuredData?: any;
}

const { 
  title, 
  description, 
  image = "/images/Flughafen%20taxi%20service.webp",
  type = "website",
  publishedTime,
  modifiedTime,
  author = "UmutTaxi",
  section,
  tags = [],
  structuredData
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, "https://umuttaxi.vercel.app");
---

<!-- Basic SEO -->
<meta name="description" content={description} />
<meta name="robots" content="index, follow" />
<meta name="author" content={author} />
<meta name="keywords" content={tags.join(", ")} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content="UmutTaxi" />
<meta property="og:locale" content="de_DE" />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />
<meta property="twitter:url" content={canonicalURL} />

<!-- Article specific meta tags -->
{type === "article" && publishedTime && (
  <meta property="article:published_time" content={publishedTime} />
)}
{type === "article" && modifiedTime && (
  <meta property="article:modified_time" content={modifiedTime} />
)}
{type === "article" && author && (
  <meta property="article:author" content={author} />
)}
{type === "article" && section && (
  <meta property="article:section" content={section} />
)}
{type === "article" && tags.length > 0 && (
  tags.map(tag => <meta property="article:tag" content={tag} />)
)}

<!-- Structured Data -->
{structuredData && (
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>
)}
